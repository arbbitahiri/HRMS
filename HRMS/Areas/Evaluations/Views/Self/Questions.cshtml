@using HRMS.Areas.Evaluations.Models.Self
@model QuestionVM
@{
    ViewData["Title"] = Resource.SecondStepEvaluation;
    Layout = "~/Areas/Evaluations/Views/Self/_Layout.cshtml";

    UserModel user = (UserModel)ViewData["User"];
    var questions = Model.TotalQuestions == 0 ? Resource.NoQuestions + ". " : Resource.QuestionsLower + ". ";
}

<style>
    fieldset {
        border: 1px solid #6993ff;
        border-radius: 10px;
        position: relative;
    }

    legend {
        width: auto;
        font-size: 15px;
        font-weight: 600;
        padding: 0 6px;
        margin-left: 10px
    }

    .bottom-legend {
        position: absolute;
        bottom: 0;
        transform: translate(-75%, 70%);
        padding: 0 5px;
    }

    .custom-slider-handle {
        border-radius: 50%;
        box-shadow: none;
        position: absolute;
        top: 0;
        width: 20px;
        height: 20px;
    }

    .custom-slider-track {
        position: absolute;
    }
</style>

<div class="flex-row-fluid">
    <div class="card" style="box-shadow: none !important;">
        <div class="card-header border-0">
            <div class="card-title align-items-start flex-column">
                <span class='@(user.Mode == TemplateMode.Dark ? "text-light" : "text-dark") text-lg'>@Model.EvaluationDetails.Firstname @Model.EvaluationDetails.Lastname</span> <br />
                <span class="text-muted mt-1 font-weight-bold font-size-sm">
                    @if (Model.TotalQuestions >= 1)
                    {
                        @Resource.Has <b class="text-primary">@Model.TotalQuestions </b>
                    }
                    @questions
                </span>
            </div>
            <div class="card-tools">
                <a onclick="add_question('@Model.EvaluationDetails.EvaluationIde')" class="btn btn-primary float-right">@Resource.AddQuestion</a>
            </div>
        </div>
        <div class="card-body">
            <div class="card" style='box-shadow: none !important; @(user.Mode == TemplateMode.Dark ? "background-color: #343a40;" : "")'>
                <div class="card-body p-0 pb-0">
                    <p style="width: 100%;">@Resource.NumericalQuestionsINFO</p>
                </div>
            </div>

            <table id="tbl_numerical_questions" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Resource.Question</th>
                        <th>@Resource.Answer</th>
                        <th data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    @if (Model.Optionals.Any())
    {
        <hr/>
        <div class="card" style="box-shadow: none !important;">
            <div class="card-body">
                @foreach (var optional in Model.Optionals)
                {
                    <fieldset class="mb-4 px-4 ml-0">
                        <legend>@optional.Question</legend>
                        @foreach (var option in optional.Options)
                        {
                            var isChecked = option.Checked ? "checked" : "";
                            <ul class="icheck-primary p-2" style="font-size: 14px;">
                                <input id="@option.OptionId" type="radio" @isChecked style="cursor: pointer;"/>
                                <label for="@option.OptionId"
                                    onclick="change_option('@option.EvaluationQuestionnaireOptionalOptionIde', '@option.DescNeeded' == 'True' ? true : false, @optional.OptionalId, @option.OptionId)">@option.Option</label>
                            </ul>
                        }
                        <legend class="bottom-legend" style="left: 89%;">
                            <button type="button" class="btn btn-danger" onclick="delete_question('@optional.EvaluationQuestionnaireOptionalIde', QuestionType.OPTIONAL)">@Resource.Delete</button>
                        </legend>
                        <legend class="bottom-legend" style="left: 95%;">
                            <button type="button" class="btn btn-primary" onclick="edit_question('@optional.EvaluationQuestionnaireOptionalIde', QuestionType.OPTIONAL)">@Resource.Edit</button>
                        </legend>
                        <div class="m-2 d-none" id='@optional.OptionalId'>
                            <textarea asp-for="@optional.OtherDescription" id="txt_other" rows="2" class="form-control"></textarea>
                            <button type="button" onclick="add_other_option('@optional.EvaluationQuestionnaireOptionalIde')" class="btn btn-primary mt-2">@Resource.Save</button>
                        </div>
                    </fieldset>
                }
            </div>
        </div>
    }
    @if (Model.Topics.Any())
    {
        <hr/>
        <div class="card" style="box-shadow: none !important;">
            <div class="card-body">
                <table id="tbl_topic_questions" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Resource.Question</th>
                        <th>@Resource.Answer</th>
                        <th data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            </div>
        </div>
    }

    <div class="d-flex justify-content-between border-top">
        <input type="button" value="@Resource.Back" onclick="back_to_register('@Model.EvaluationDetails.EvaluationIde')" class="btn btn-outline-primary font-weight-bolder text-uppercase mt-2"/>
        <input type="button" value="@Resource.Continue" onclick="continue_to_document('@Model.EvaluationDetails.EvaluationIde')" class="btn btn-primary font-weight-bolder text-uppercase mt-2"/>
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        $(document).ready(function() {
            if (@((int)Model.Method) == MethodType.POST) {
                $('#tab1').attr({ href: '', style: 'cursor: default' });
                $('#tab2').attr({ href: '', style: '' });
                $('#tab3').attr({ href: '', style: 'cursor: default' });

                $('#trigger_documents_form').attr({ disabled: true });

                $('#icon_register').attr({ style: 'background-color: #43b25d' });
            } else {
                $('#tab1').attr({ href: '@Url.Action("Index", "Self")?ide=@Model.EvaluationDetails.EvaluationIde&method=@((int)Model.Method)', style: "cursor: pointer" });
                $('#tab2').attr({ href: '@Url.Action("Questions", "Self")?ide=@Model.EvaluationDetails.EvaluationIde&method=@((int)Model.Method)', style: "cursor: pointer" });
                $('#tab3').attr({ href: '@Url.Action("Documents", "Self")?ide=@Model.EvaluationDetails.EvaluationIde&method=@((int)Model.Method)', style: "cursor: pointer" });

                $('#icon_register').attr({ style: 'background-color: #43b25d' });
            }

            render_numerical_tbl(@Json.Serialize(Model.Numericals));
            render_topic_tbl(@Json.Serialize(Model.Topics));
        });

        function render_numerical_tbl(data) {
            var rowCount = 1;
            $('#tbl_numerical_questions').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 5,
                data: data,
                deferRender: true,
                columnDefs: [
                    { className: "w5 vertikal", targets: [0, 3] },
                    { className: "w20 vertikal", targets: [1] },
                    { className: "w20 vertikal", targets: [2] }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            rowCount++;
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var desc = '///';
                            if (row.title != null) {
                                row.title = row.title.slice(-1) != "?" ? row.title + "?" : row.title;
                                if (row.title.length > 80) {
                                    desc = row.title.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.title.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                                } else {
                                    desc = row.title ?? "///";
                                }
                            }
                            return desc;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            return '<div class="clearfix" id="kt_checkbox">' +
                                '<div class="icheck-secondary d-inline pr-5"><input id="0' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 0 ? "checked" : "") + '/><label for="0' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 0)">0</label></div>' +
                                '<div class="icheck-danger d-inline pr-5"><input id="1' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 1 ? "checked" : "") + '/><label for="1' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 1)">1</label></div>' +
                                '<div class="icheck-orange d-inline pr-5"><input id="2' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 2 ? "checked" : "") + '/><label for="2' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 2)">2</label></div>' +
                                '<div class="icheck-warning d-inline pr-5"><input id="3' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 3 ? "checked" : "") + '/><label for="3' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 3)">3</label></div>' +
                                '<div class="icheck-info d-inline pr-5"><input id="4' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 4 ? "checked" : "") + '/><label for="4' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 4)">4</label></div>' +
                                '<div class="icheck-success d-inline pr-5"><input id="5' + row.numericalId + '" style="cursor: pointer;" type="radio" ' + (row.grade == 5 ? "checked" : "") + '/><label for="5' + row.numericalId + '" onclick="change_grade(\'' + row.evaluationQuestionnaireNumericalIde + '\', 5)">5</label></div>' +
                                '</div>';
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="input-group-prepend">' +
                                '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu">' +
                                '<button type="button" class="dropdown-item" onclick="edit_question(\'' + row.evaluationQuestionnaireNumericalIde + '\', \'' + QuestionType.NUMERICAL + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                '<button type="button" class="dropdown-item" onclick="delete_question(\'' + row.evaluationQuestionnaireNumericalIde + '\', \'' + QuestionType.NUMERICAL + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>' +
                                '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function render_topic_tbl(data) {
            var rowCount = 1;
            $('#tbl_topic_questions').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 5,
                data: data,
                deferRender: true,
                columnDefs: [
                    { className: "w5 vertikal", targets: [0, 3] },
                    { className: "w20 vertikal", targets: [1] },
                    { className: "w20 vertikal", targets: [2] }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            rowCount++;
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var qst = '///';
                            if (row.question != null) {
                                row.question = row.question.slice(-1) != "?" ? row.question + "?" : row.question;
                                if (row.question.length > 80) {
                                    qst = row.question.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.question.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                                } else {
                                    qst = row.question ?? "///";
                                }
                            }
                            return qst;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var ans = '///';
                            if (row.answer != null) {
                                if (row.answer.length > 80) {
                                    ans = row.answer.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.answer.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                                } else {
                                    ans = row.answer ?? "///";
                                }
                            }
                            return ans;
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="input-group-prepend">' +
                                '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu">';
                            if (row.answer == null) {
                                dropdown += '<button type="button" class="dropdown-item" onclick="answer_question(\'' + row.evaluationQuestionnaireTopicIde + '\')"><span class="mr-1"><i class="fas fa-plus"></i></span><span class="p-1">@Resource.AnswerIt</span></button>';
                            }
                                dropdown += '<button type="button" class="dropdown-item" onclick="edit_question(\'' + row.evaluationQuestionnaireTopicIde + '\', \'' + QuestionType.TOPIC + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                    '<button type="button" class="dropdown-item" onclick="delete_question(\'' + row.evaluationQuestionnaireTopicIde + '\', \'' + QuestionType.TOPIC + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>' +
                                    '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function load_more(e) {
            $(e).parent().find('.load-less-fst').removeClass('d-none');
            $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
            $(e).addClass('d-none');
        }

        function load_less(e) {
            $(e).addClass('d-none');
            $(e).parent().addClass('d-none');
            $(e).parent().parent().find('.load-more').removeClass('d-none');
        }

        function change_grade(ide, num) {
            $.post('@Url.Action("NumericalAnswer", "Self")', {
                ide: ide,
                num: num,
                __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
            }, function(data) {
                handle_success(data, SubmitPathType.RELOAD, "");
            });
        }

        function change_option(ide, other, optionalId, optionId) {
            if (other) {
                $('#' + optionalId).removeClass('d-none');
            } else {
                $.post('@Url.Action("OptionalAnswer", "Self")', {
                    ide: ide,
                    __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                }, function(data) {
                    handle_success(data, SubmitPathType.RELOAD, "");
                });
            }
        }

        function add_other_option(ide) {
            $.post('@Url.Action("OptionalAnswer", "Self")', {
                ide: ide,
                txt: $('#txt_other').val(),
                __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
            }, function(data) {
                handle_success(data, SubmitPathType.RELOAD, "");
            });
        }

        function add_question(ide) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_AddQuestion", "Self")?ide=' + ide, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function edit_question(ide, question_type) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_EditQuestion", "Self")', {
                ide: ide,
                questionType: question_type
            }, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function answer_question(ide) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_TopicAnswer", "Self")?ide=' + ide, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function delete_question(ide, question_type) {
            if(question_type === QuestionType.TOPIC) {
                $('#' + ide.replace("==", "")).val("");
            }

            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteQuestion)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteQuestion", "Self")', {
                        ide: ide,
                        questionType: question_type,
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                        }, function (data) {
                            handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }

        function back_to_register(ide) {
            window.location.href = '@Url.Action("Index", "Self")?ide=' + ide + '&method=@((int)Model.Method)';
        }

        function continue_to_document(ide) {
            window.location.href = '@Url.Action("Documents", "Self")?ide=' + ide + '&method=@((int)Model.Method)';
        }
    </script>
}
