// <auto-generated />
using System;
using HRMS.Data.General;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRMS.Data.Migrations
{
    [DbContext(typeof(HRMSContext))]
    [Migration("20220110081626_HRMS-Work")]
    partial class HRMSWork
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("HRMS.Data.General.AppSettings", b =>
                {
                    b.Property<int>("HistoryAppSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistoryAppSettingsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryAppSettingsId"), 1L, 1);

                    b.Property<DateTime>("IndertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OldVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryAppSettingsId");

                    b.ToTable("AppSettings", "History");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("DescriptionEN");

                    b.Property<string>("DescriptionSq")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("DescriptionSQ");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AllowNotification")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUsers1", b =>
                {
                    b.Property<int>("HistoryAspNetUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistoryAspNetUsersID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryAspNetUsersId"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AllowNotification")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("HistoryAspNetUsersId")
                        .HasName("PK_AspNetUsers_1");

                    b.ToTable("AspNetUsers", "History");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HRMS.Data.General.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HRMS.Data.General.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DocumentTypeID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("HRMS.Data.General.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentTypeId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("DocumentTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("HRMS.Data.General.EducationLevelType", b =>
                {
                    b.Property<int>("EducationLevelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EducationLevelTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationLevelTypeId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("EducationLevelTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("EducationLevelType");
                });

            modelBuilder.Entity("HRMS.Data.General.EvaluationType", b =>
                {
                    b.Property<int>("EvaluationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EvaluationTypeID");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("EvaluationTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("EvaluationType");
                });

            modelBuilder.Entity("HRMS.Data.General.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderID");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameSQ");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayRequest", b =>
                {
                    b.Property<int>("HolidayRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HolidayRequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayRequestId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HolidayTypeId")
                        .HasColumnType("int")
                        .HasColumnName("HolidayTypeID");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StaffDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("HolidayRequestId");

                    b.HasIndex("HolidayTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StaffDepartmentId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("HolidayRequest");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayRequestStatus", b =>
                {
                    b.Property<int>("HolidayRequestStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HolidayRequestStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayRequestStatusId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("HolidayRequestId")
                        .HasColumnType("int")
                        .HasColumnName("HolidayRequestID");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int")
                        .HasColumnName("StatusTypeID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("HolidayRequestStatusId");

                    b.HasIndex("HolidayRequestId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StatusTypeId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("HolidayRequestStatus");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayType", b =>
                {
                    b.Property<int>("HolidayTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HolidayTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayTypeId"), 1L, 1);

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("HolidayTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("HolidayType");
                });

            modelBuilder.Entity("HRMS.Data.General.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Error")
                        .HasColumnType("bit");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormContent")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("LogId");

                    b.ToTable("Log", "Core");
                });

            modelBuilder.Entity("HRMS.Data.General.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Claim")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Controller")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("HasSubMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameSQ");

                    b.Property<string>("OpenFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<string>("Roles")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("Menu", "Core");
                });

            modelBuilder.Entity("HRMS.Data.General.ProfessionType", b =>
                {
                    b.Property<int>("ProfessionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfessionTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionTypeId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("ProfessionTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("ProfessionType");
                });

            modelBuilder.Entity("HRMS.Data.General.RateType", b =>
                {
                    b.Property<int>("RateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RateTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RateTypeId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<int>("RateNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("RateTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("RateType");
                });

            modelBuilder.Entity("HRMS.Data.General.RealRole", b =>
                {
                    b.Property<int>("RealRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RealRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealRoleId"), 1L, 1);

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("RoleID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("RealRoleId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("RoleId");

                    b.HasIndex("UpdatedFrom");

                    b.HasIndex("UserId");

                    b.ToTable("RealRole", "Core");
                });

            modelBuilder.Entity("HRMS.Data.General.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BirthPlace")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Country")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("StaffId");

                    b.HasIndex("UpdatedFrom");

                    b.HasIndex("UserId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartment", b =>
                {
                    b.Property<int>("StaffDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDepartmentId"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<int>("StaffTypeId")
                        .HasColumnType("int")
                        .HasColumnName("StaffTypeID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDepartmentId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StaffId");

                    b.HasIndex("StaffTypeId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffDepartment");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluation", b =>
                {
                    b.Property<int>("StaffDepartmentEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentEvaluationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDepartmentEvaluationId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EvaluationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EvaluationTypeID");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StaffDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDepartmentEvaluationId");

                    b.HasIndex("EvaluationTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StaffDepartmentId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffDepartmentEvaluation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaire", b =>
                {
                    b.Property<int>("StaffDepartmentEvaluationQuestionnaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentEvaluationQuestionnaireID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDepartmentEvaluationQuestionnaireId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RateTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RateTypeID");

                    b.Property<int>("StaffDepartmentEvaluationId")
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentEvaluationID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDepartmentEvaluationQuestionnaireId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("RateTypeId");

                    b.HasIndex("StaffDepartmentEvaluationId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffDepartmentEvaluationQuestionnaire");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaireRate", b =>
                {
                    b.Property<int>("StaffDepartmentEvaluationQuestionnaireRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentEvaluationQuestionnaireRateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDepartmentEvaluationQuestionnaireRateId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RateTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RateTypeID");

                    b.Property<int>("StaffDepartmentEvaluationQuestionnaireId")
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentEvaluationQuestionnaireID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDepartmentEvaluationQuestionnaireRateId");

                    b.HasIndex("RateTypeId");

                    b.HasIndex("StaffDepartmentEvaluationQuestionnaireId");

                    b.ToTable("StaffDepartmentEvaluationQuestionnaireRate");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentSubject", b =>
                {
                    b.Property<int>("StaffDepartmentSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentSubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDepartmentSubjectId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StaffDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("StaffDepartmentID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDepartmentSubjectId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StaffDepartmentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffDepartmentSubject");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDocument", b =>
                {
                    b.Property<int>("StaffDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDocumentId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DocumentTypeID");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffDocumentId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("StaffId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffDocument");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffQualification", b =>
                {
                    b.Property<int>("StaffQualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffQualificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffQualificationId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("CreditNumber")
                        .HasColumnType("int");

                    b.Property<string>("CreditType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationLevelTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EducationLevelTypeID");

                    b.Property<string>("FieldStudy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("FinalGrade")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("OnGoing")
                        .HasColumnType("bit");

                    b.Property<int>("ProfessionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ProfessionTypeID");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<string>("Thesis")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime");

                    b.Property<bool>("Training")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Validity")
                        .HasColumnType("datetime");

                    b.HasKey("StaffQualificationId");

                    b.HasIndex("EducationLevelTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("ProfessionTypeId");

                    b.HasIndex("StaffId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffQualification");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffType", b =>
                {
                    b.Property<int>("StaffTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffTypeId"), 1L, 1);

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StaffTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StaffType");
                });

            modelBuilder.Entity("HRMS.Data.General.StatusType", b =>
                {
                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int")
                        .HasColumnName("StatusTypeID");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("StatusTypeId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StatusType");
                });

            modelBuilder.Entity("HRMS.Data.General.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSQ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("HRMS.Data.General.SubMenu", b =>
                {
                    b.Property<int>("SubMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubMenuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubMenuId"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Claim")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Controller")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NameSQ");

                    b.Property<string>("OpenFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<string>("Roles")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UpdatedNo")
                        .HasColumnType("int");

                    b.HasKey("SubMenuId");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("MenuId");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("SubMenu", "Core");
                });

            modelBuilder.Entity("AspNetUserRoles", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.Data.General.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetRoleClaims", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserClaims", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserLogins", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUserTokens", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.Data.General.Department", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("DepartmentInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Department_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("DepartmentUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_Department_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.Document", b =>
                {
                    b.HasOne("HRMS.Data.General.DocumentType", "DocumentType")
                        .WithMany("Document")
                        .HasForeignKey("DocumentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Document_DocumentType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("DocumentInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Document_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("DocumentUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_Document_AspNetUsers_Update");

                    b.Navigation("DocumentType");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.DocumentType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("DocumentTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_DocumentType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("DocumentTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_DocumentType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.EducationLevelType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("EducationLevelTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_EducationLevelType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("EducationLevelTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_EducationLevelType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.EvaluationType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("EvaluationTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_EvaluationType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("EvaluationTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_EvaluationType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayRequest", b =>
                {
                    b.HasOne("HRMS.Data.General.HolidayType", "HolidayType")
                        .WithMany("HolidayRequest")
                        .HasForeignKey("HolidayTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequest_HolidayType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("HolidayRequestInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequest_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.StaffDepartment", "StaffDepartment")
                        .WithMany("HolidayRequest")
                        .HasForeignKey("StaffDepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequest_StaffDepartment");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("HolidayRequestUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_HolidayRequest_AspNetUsers_Update");

                    b.Navigation("HolidayType");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("StaffDepartment");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayRequestStatus", b =>
                {
                    b.HasOne("HRMS.Data.General.HolidayRequest", "HolidayRequest")
                        .WithMany("HolidayRequestStatus")
                        .HasForeignKey("HolidayRequestId")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequestStatus_HolidayRequest");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("HolidayRequestStatusInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequestStatus_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.StatusType", "StatusType")
                        .WithMany("HolidayRequestStatus")
                        .HasForeignKey("StatusTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayRequestStatus_StatusType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("HolidayRequestStatusUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_HolidayRequestStatus_AspNetUsers_Update");

                    b.Navigation("HolidayRequest");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("StatusType");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("HolidayTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_HolidayType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("HolidayTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_HolidayType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.Menu", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("MenuInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Menu_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("MenuUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_Menu_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.ProfessionType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("ProfessionTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_ProfessionType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("ProfessionTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_ProfessionType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.RateType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("RateTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_RateType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("RateTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_RateType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.RealRole", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("RealRoleInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_RealRole_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetRoles", "Role")
                        .WithMany("RealRole")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_RealRole_AspNetRoles");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("RealRoleUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_RealRole_AspNetUsers_Update");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "User")
                        .WithMany("RealRoleUser")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_RealRole_AspNetUsers");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("Role");

                    b.Navigation("UpdatedFromNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.Data.General.Staff", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_Staff_AspNetUsers_Update");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "User")
                        .WithMany("StaffUser")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Staff_AspNetUsers_Insert");

                    b.Navigation("UpdatedFromNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartment", b =>
                {
                    b.HasOne("HRMS.Data.General.Department", "Department")
                        .WithMany("StaffDepartment")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartment_Department");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffDepartmentInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartment_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.Staff", "Staff")
                        .WithMany("StaffDepartment")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartment_Staff");

                    b.HasOne("HRMS.Data.General.StaffType", "StaffType")
                        .WithMany("StaffDepartment")
                        .HasForeignKey("StaffTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartment_StaffType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffDepartmentUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffDepartment_AspNetUsers_Update");

                    b.Navigation("Department");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("Staff");

                    b.Navigation("StaffType");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluation", b =>
                {
                    b.HasOne("HRMS.Data.General.EvaluationType", "EvaluationType")
                        .WithMany("StaffDepartmentEvaluation")
                        .HasForeignKey("EvaluationTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluation_EvaluationType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffDepartmentEvaluationInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluation_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.StaffDepartment", "StaffDepartment")
                        .WithMany("StaffDepartmentEvaluation")
                        .HasForeignKey("StaffDepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluation_StaffCollege");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffDepartmentEvaluationUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffDepartmentEvaluation_AspNetUsers_Update");

                    b.Navigation("EvaluationType");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("StaffDepartment");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaire", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffDepartmentEvaluationQuestionnaireInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired();

                    b.HasOne("HRMS.Data.General.RateType", "RateType")
                        .WithMany("StaffDepartmentEvaluationQuestionnaire")
                        .HasForeignKey("RateTypeId")
                        .HasConstraintName("FK_StaffDepartmentEvaluationQuestionnaire_RateType");

                    b.HasOne("HRMS.Data.General.StaffDepartmentEvaluation", "StaffDepartmentEvaluation")
                        .WithMany("StaffDepartmentEvaluationQuestionnaire")
                        .HasForeignKey("StaffDepartmentEvaluationId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluationQuestionnaire_StaffDepartmentEvaluation");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffDepartmentEvaluationQuestionnaireUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("RateType");

                    b.Navigation("StaffDepartmentEvaluation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaireRate", b =>
                {
                    b.HasOne("HRMS.Data.General.RateType", "RateType")
                        .WithMany("StaffDepartmentEvaluationQuestionnaireRate")
                        .HasForeignKey("RateTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluationQuestionnaireRate_RateType");

                    b.HasOne("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaire", "StaffDepartmentEvaluationQuestionnaire")
                        .WithMany("StaffDepartmentEvaluationQuestionnaireRate")
                        .HasForeignKey("StaffDepartmentEvaluationQuestionnaireId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentEvaluationQuestionnaireRate_StaffDepartmentEvaluationQuestionnaire");

                    b.Navigation("RateType");

                    b.Navigation("StaffDepartmentEvaluationQuestionnaire");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentSubject", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffDepartmentSubjectInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentSubject_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.StaffDepartment", "StaffDepartment")
                        .WithMany("StaffDepartmentSubject")
                        .HasForeignKey("StaffDepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentSubject_StaffDepartment");

                    b.HasOne("HRMS.Data.General.Subject", "Subject")
                        .WithMany("StaffDepartmentSubject")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDepartmentSubject_Subject");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffDepartmentSubjectUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffDepartmentSubject_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("StaffDepartment");

                    b.Navigation("Subject");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDocument", b =>
                {
                    b.HasOne("HRMS.Data.General.DocumentType", "DocumentType")
                        .WithMany("StaffDocument")
                        .HasForeignKey("DocumentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDocument_Document");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffDocumentInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDocument_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.Staff", "Staff")
                        .WithMany("StaffDocument")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffDocument_Staff");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffDocumentUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffDocument_AspNetUsers_Update");

                    b.Navigation("DocumentType");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("Staff");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffQualification", b =>
                {
                    b.HasOne("HRMS.Data.General.EducationLevelType", "EducationLevelType")
                        .WithMany("StaffQualification")
                        .HasForeignKey("EducationLevelTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffQualification_EducationLevelType");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffQualificationInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffQualification_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.ProfessionType", "ProfessionType")
                        .WithMany("StaffQualification")
                        .HasForeignKey("ProfessionTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffQualification_ProfessionType");

                    b.HasOne("HRMS.Data.General.Staff", "Staff")
                        .WithMany("StaffQualification")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_StaffQualification_Staff");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffQualificationUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffQualification_AspNetUsers_Update");

                    b.Navigation("EducationLevelType");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("ProfessionType");

                    b.Navigation("Staff");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StaffTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StaffType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StaffTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StaffType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.StatusType", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StatusTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StatusType_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StatusTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StatusType_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.Subject", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("SubjectInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_Subject_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("SubjectUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_Subject_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.SubMenu", b =>
                {
                    b.HasOne("HRMS.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("SubMenuInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_SubMenu_AspNetUsers_Insert");

                    b.HasOne("HRMS.Data.General.Menu", "Menu")
                        .WithMany("SubMenu")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK_SubMenu_Menu");

                    b.HasOne("HRMS.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("SubMenuUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_SubMenu_AspNetUsers_Update");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("Menu");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetRoles", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("RealRole");
                });

            modelBuilder.Entity("HRMS.Data.General.AspNetUsers", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("DepartmentInsertedFromNavigation");

                    b.Navigation("DepartmentUpdatedFromNavigation");

                    b.Navigation("DocumentInsertedFromNavigation");

                    b.Navigation("DocumentTypeInsertedFromNavigation");

                    b.Navigation("DocumentTypeUpdatedFromNavigation");

                    b.Navigation("DocumentUpdatedFromNavigation");

                    b.Navigation("EducationLevelTypeInsertedFromNavigation");

                    b.Navigation("EducationLevelTypeUpdatedFromNavigation");

                    b.Navigation("EvaluationTypeInsertedFromNavigation");

                    b.Navigation("EvaluationTypeUpdatedFromNavigation");

                    b.Navigation("HolidayRequestInsertedFromNavigation");

                    b.Navigation("HolidayRequestStatusInsertedFromNavigation");

                    b.Navigation("HolidayRequestStatusUpdatedFromNavigation");

                    b.Navigation("HolidayRequestUpdatedFromNavigation");

                    b.Navigation("HolidayTypeInsertedFromNavigation");

                    b.Navigation("HolidayTypeUpdatedFromNavigation");

                    b.Navigation("MenuInsertedFromNavigation");

                    b.Navigation("MenuUpdatedFromNavigation");

                    b.Navigation("ProfessionTypeInsertedFromNavigation");

                    b.Navigation("ProfessionTypeUpdatedFromNavigation");

                    b.Navigation("RateTypeInsertedFromNavigation");

                    b.Navigation("RateTypeUpdatedFromNavigation");

                    b.Navigation("RealRoleInsertedFromNavigation");

                    b.Navigation("RealRoleUpdatedFromNavigation");

                    b.Navigation("RealRoleUser");

                    b.Navigation("StaffDepartmentEvaluationInsertedFromNavigation");

                    b.Navigation("StaffDepartmentEvaluationQuestionnaireInsertedFromNavigation");

                    b.Navigation("StaffDepartmentEvaluationQuestionnaireUpdatedFromNavigation");

                    b.Navigation("StaffDepartmentEvaluationUpdatedFromNavigation");

                    b.Navigation("StaffDepartmentInsertedFromNavigation");

                    b.Navigation("StaffDepartmentSubjectInsertedFromNavigation");

                    b.Navigation("StaffDepartmentSubjectUpdatedFromNavigation");

                    b.Navigation("StaffDepartmentUpdatedFromNavigation");

                    b.Navigation("StaffDocumentInsertedFromNavigation");

                    b.Navigation("StaffDocumentUpdatedFromNavigation");

                    b.Navigation("StaffQualificationInsertedFromNavigation");

                    b.Navigation("StaffQualificationUpdatedFromNavigation");

                    b.Navigation("StaffTypeInsertedFromNavigation");

                    b.Navigation("StaffTypeUpdatedFromNavigation");

                    b.Navigation("StaffUpdatedFromNavigation");

                    b.Navigation("StaffUser");

                    b.Navigation("StatusTypeInsertedFromNavigation");

                    b.Navigation("StatusTypeUpdatedFromNavigation");

                    b.Navigation("SubMenuInsertedFromNavigation");

                    b.Navigation("SubMenuUpdatedFromNavigation");

                    b.Navigation("SubjectInsertedFromNavigation");

                    b.Navigation("SubjectUpdatedFromNavigation");
                });

            modelBuilder.Entity("HRMS.Data.General.Department", b =>
                {
                    b.Navigation("StaffDepartment");
                });

            modelBuilder.Entity("HRMS.Data.General.DocumentType", b =>
                {
                    b.Navigation("Document");

                    b.Navigation("StaffDocument");
                });

            modelBuilder.Entity("HRMS.Data.General.EducationLevelType", b =>
                {
                    b.Navigation("StaffQualification");
                });

            modelBuilder.Entity("HRMS.Data.General.EvaluationType", b =>
                {
                    b.Navigation("StaffDepartmentEvaluation");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayRequest", b =>
                {
                    b.Navigation("HolidayRequestStatus");
                });

            modelBuilder.Entity("HRMS.Data.General.HolidayType", b =>
                {
                    b.Navigation("HolidayRequest");
                });

            modelBuilder.Entity("HRMS.Data.General.Menu", b =>
                {
                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("HRMS.Data.General.ProfessionType", b =>
                {
                    b.Navigation("StaffQualification");
                });

            modelBuilder.Entity("HRMS.Data.General.RateType", b =>
                {
                    b.Navigation("StaffDepartmentEvaluationQuestionnaire");

                    b.Navigation("StaffDepartmentEvaluationQuestionnaireRate");
                });

            modelBuilder.Entity("HRMS.Data.General.Staff", b =>
                {
                    b.Navigation("StaffDepartment");

                    b.Navigation("StaffDocument");

                    b.Navigation("StaffQualification");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartment", b =>
                {
                    b.Navigation("HolidayRequest");

                    b.Navigation("StaffDepartmentEvaluation");

                    b.Navigation("StaffDepartmentSubject");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluation", b =>
                {
                    b.Navigation("StaffDepartmentEvaluationQuestionnaire");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffDepartmentEvaluationQuestionnaire", b =>
                {
                    b.Navigation("StaffDepartmentEvaluationQuestionnaireRate");
                });

            modelBuilder.Entity("HRMS.Data.General.StaffType", b =>
                {
                    b.Navigation("StaffDepartment");
                });

            modelBuilder.Entity("HRMS.Data.General.StatusType", b =>
                {
                    b.Navigation("HolidayRequestStatus");
                });

            modelBuilder.Entity("HRMS.Data.General.Subject", b =>
                {
                    b.Navigation("StaffDepartmentSubject");
                });
#pragma warning restore 612, 618
        }
    }
}
