function render_pending_tbl(data) {
    $('#tbl_holidays_pending').DataTable({
        destroy: true,
        language: {
            url: `/Culture/DataTable/${culture}.json`
        },
        keys: true,
        responsive: true,
        pageLength: 15,
        data: data,
        deferRender: true,
        columnDefs: [
            { className: "w5 vertikal", targets: [0, 6] },
            { className: "w10 vertikal", targets: [3, 4, 5] },
            { className: "w15 vertikal", targets: [2] },
            { className: "w20 vertikal", targets: [1] }
        ],
        order: [[0, "asc"]],
        columns: [
            {
                data: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                data: function (row, type, set) {
                    var name = '<div class="d-flex align-items-center">' +
                        '<div class="symbol symbol-40 symbol-sm flex-shrink-0">';
                    if (row.profileImage == null) {
                        name += '<span class="symbol-label font-size-h4 font-weight-bold">' + row.firstname.slice(0, 1) + ' ' + row.lastname.slice(0, 1) + '</span>';
                    } else {
                        name += '<img loading="lazy" src="' + row.profileImage + '" alt="user image"/>'
                    }
                    name += '</div><div class="ml-4">' +
                        '<div class="text-dark-75 font-weight-bolder font-size-lg mb-0">' + row.firstname + ' ' + row.lastname + '</div>' +
                        '<div class="text-muted font-weight-bold text-hover-primary">' + row.personalNumber + '</div>' +
                        '</div></div>';
                    return name;
                }
            },
            { data: "holidayType" },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.startDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.endDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function (row, type, set) {
                    var date = new Date(Date.parse(row.insertedDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                }
            },
            {
                data: function (row, type, set) {
                    let dateTimeNow = new Date();
                    var lockoutDate = new Date(row.lockoutEnd);

                    var dropdown = '<div class="input-group-prepend">' +
                        '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                        '<div class="dropdown-menu" role="menu">';
                    if (!row.finished) {
                        if ('@role' === 'Manager') {
                            dropdown += '<button type="button" class="dropdown-item" onclick="review_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-search"></i></span><span class="p-1">@Resource.Review</span></button>';
                        }
                        dropdown += '<button type="button" class="dropdown-item" onclick="edit_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-pen"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                    '<button type="button" class="dropdown-item" onclick="delete_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>';
                    }
                    dropdown += '<button type="button" class="dropdown-item" onclick="details_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-info-circle"></i></span><span class="p-1">@Resource.Details</span></button>' +
                        '</div></div>';
                    return dropdown;
                }
            }
        ]
    });
}

function render_approved_tbl(data) {
    $('#tbl_holidays_approved').DataTable({
        destroy: true,
        language: {
            url: `/Culture/DataTable/${culture}.json`
        },
        keys: true,
        responsive: true,
        pageLength: 15,
        data: data,
        deferRender: true,
        columnDefs: [
            { className: "w5 vertikal", targets: [0, 7] },
            { className: "w10 vertikal", targets: [3, 4] },
            { className: "w15 vertikal", targets: [2, 5, 6] },
            { className: "w20 vertikal", targets: [1] }
        ],
        order: [[0, "asc"]],
        columns: [
            {
                data: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                data: function (row, type, set) {
                    var name = '<div class="d-flex align-items-center">' +
                        '<div class="symbol symbol-40 symbol-sm flex-shrink-0">';
                    if (row.profileImage == null) {
                        name += '<span class="symbol-label font-size-h4 font-weight-bold">' + row.firstname.slice(0, 1) + ' ' + row.lastname.slice(0, 1) + '</span>';
                    } else {
                        name += '<img loading="lazy" src="' + row.profileImage + '" alt="user image"/>'
                    }
                    name += '</div><div class="ml-4">' +
                        '<div class="text-dark-75 font-weight-bolder font-size-lg mb-0">' + row.firstname + ' ' + row.lastname + '</div>' +
                        '<div class="text-muted font-weight-bold text-hover-primary">' + row.personalNumber + '</div>' +
                        '</div></div>';
                    return name;
                }
            },
            { data: "holidayType" },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.startDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.endDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function (row, type, set) {
                    var date = new Date(Date.parse(row.insertedDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                }
            },
            {
                data: function (row, type, set) {
                    var date = new Date(Date.parse(row.updatedDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                }
            },
            {
                data: function (row, type, set) {
                    let dateTimeNow = new Date();
                    var lockoutDate = new Date(row.lockoutEnd);

                    var dropdown = '<div class="input-group-prepend">' +
                        '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                        '<div class="dropdown-menu" role="menu">';
                    if (!row.finished) {
                        if ('@role' === 'Manager') {
                            dropdown += '<button type="button" class="dropdown-item" onclick="review_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-search"></i></span><span class="p-1">@Resource.Review</span></button>';
                        }
                        dropdown += '<button type="button" class="dropdown-item" onclick="edit_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-pen"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                    '<button type="button" class="dropdown-item" onclick="delete_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>';
                    }
                    dropdown += '<button type="button" class="dropdown-item" onclick="details_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-info-circle"></i></span><span class="p-1">@Resource.Details</span></button>' +
                        '</div></div>';
                    return dropdown;
                }
            }
        ]
    });
}

function render_rejected_tbl(data) {
    $('#tbl_holidays_rejected').DataTable({
        destroy: true,
        language: {
            url: `/Culture/DataTable/${culture}.json`
        },
        keys: true,
        responsive: true,
        pageLength: 15,
        data: data,
        deferRender: true,
        columnDefs: [
            { className: "w5 vertikal", targets: [0, 7] },
            { className: "w10 vertikal", targets: [3, 4] },
            { className: "w15 vertikal", targets: [2, 5, 6] },
            { className: "w20 vertikal", targets: [1] }
        ],
        order: [[0, "asc"]],
        columns: [
            {
                data: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                data: function (row, type, set) {
                    var name = '<div class="d-flex align-items-center">' +
                        '<div class="symbol symbol-40 symbol-sm flex-shrink-0">';
                    if (row.profileImage == null) {
                        name += '<span class="symbol-label font-size-h4 font-weight-bold">' + row.firstname.slice(0, 1) + ' ' + row.lastname.slice(0, 1) + '</span>';
                    } else {
                        name += '<img loading="lazy" src="' + row.profileImage + '" alt="user image"/>'
                    }
                    name += '</div><div class="ml-4">' +
                        '<div class="text-dark-75 font-weight-bolder font-size-lg mb-0">' + row.firstname + ' ' + row.lastname + '</div>' +
                        '<div class="text-muted font-weight-bold text-hover-primary">' + row.personalNumber + '</div>' +
                        '</div></div>';
                    return name;
                }
            },
            { data: "holidayType" },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.startDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function(row, type, set) {
                    var date = new Date(Date.parse(row.endDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }
            },
            {
                data: function (row, type, set) {
                    var date = new Date(Date.parse(row.insertedDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                }
            },
            {
                data: function (row, type, set) {
                    var date = new Date(Date.parse(row.updatedDate));
                    return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                }
            },
            {
                data: function (row, type, set) {
                    let dateTimeNow = new Date();
                    var lockoutDate = new Date(row.lockoutEnd);

                    var dropdown = '<div class="input-group-prepend">' +
                        '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                        '<div class="dropdown-menu" role="menu">';
                    if (!row.finished) {
                        if ('@role' === 'Manager') {
                            dropdown += '<button type="button" class="dropdown-item" onclick="review_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-search"></i></span><span class="p-1">@Resource.Review</span></button>';
                        }
                        dropdown += '<button type="button" class="dropdown-item" onclick="edit_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-pen"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                    '<button type="button" class="dropdown-item" onclick="delete_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>';
                    }
                    dropdown += '<button type="button" class="dropdown-item" onclick="details_holiday(\'' + row.holidayRequestIde + '\')"><span class="mr-1"><i class="fas fa-info-circle"></i></span><span class="p-1">@Resource.Details</span></button>' +
                        '</div></div>';
                    return dropdown;
                }
            }
        ]
    });
}

<div class="card" style='box-shadow: none !important; @(user.Mode == TemplateMode.Dark ? "background-color: #343a40;" : "")'>
    <div class="card-body p-0 pb-0">
        <p style="width: 100%;">@Resource.NumericalQuestionsINFO</p>
        <div class="slider-green" disabled="disabled">
            <div class="slider slider-horizontal" id="" style="width: 100%;">
                <div class="slider-track" style="width: 100%; cursor: default;">
                </div>
                <div class="custom-slider-handle min-slider-handle round" role="slider" style="background: #6c757d; left: 0%;" aria-valuenow="-200" tabindex="0"></div>
                <div class="custom-slider-handle min-slider-handle round" role="slider" style="background: #dc3545; left: 20%;" aria-valuenow="-120" tabindex="0"></div>
                <div class="custom-slider-handle min-slider-handle round" role="slider" style="background: #ff851b; left: 40%;" aria-valuenow="-40" tabindex="0"></div>
                <div class="custom-slider-handle min-slider-handle round" role="slider" style="background: #ffc107; left: 60%;" aria-valuenow="40" tabindex="0"></div>
                <div class="custom-slider-handle min-slider-handle round" role="slider" style="background: #17a2b8; left: 80%;" aria-valuenow="120" tabindex="0"></div>
                <div class="custom-slider-handle max-slider-handle round" role="slider" style="background: #28a745; left: 100%;" aria-valuenow="200" tabindex="0"></div>
            </div>
        </div>
        <p>
            <small class="text-muted" style="position: absolute; left: -1%">@Resource.DontKnow</small>
            <small class="text-muted" style="position: absolute; left: 17%">@Resource.DontAgreeAll</small>
            <small class="text-muted" style="position: absolute; left: 38%">@Resource.DontAgree</small>
            <small class="text-muted" style="position: absolute; left: 55%">@Resource.AgreeNorDisagree</small>
            <small class="text-muted" style="position: absolute; left: 78%">@Resource.Agree</small>
            <small class="text-muted" style="position: absolute; left: 97%">@Resource.AgreeTotally</small>
        </p>
    </div>
</div>




        function change_staff() {
            $('#StaffId').select2({
                width: "100%",
                allowClear: true,
                data: data,
                language: {
                    noResults: function () {
                        return '@Html.Raw(Resource.NoResultsFound)';
                    },
                    searching: function() {
                        return '@Html.Raw(Resource.Searching)';
                    },
                },
                ajax: {
                    url: '@Url.Action("GetStaff")',
                    type: 'post',
                    datatype: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            name: params.term,
                            userId: '@user.Id',
                            __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                        };
                    },
                    processResults: function (response) {
                        return {
                            results: response
                        };
                    },
                    catch: true
                },
                placeholder: '@Resource.Choose',
                templateResult: formatRepo,
                templateSelection: formatRepoSelection
            });
        }

        function formatRepo (repo) {
            if (repo.loading) {
                return repo.text;
            }

            var $container = $(
                '<span class="d-flex align-items-center">' + (repo.image == null ? ('<div class="symbol symbol-40 symbol-sm flex-shrink-0 mr-3"><span class="symbol-label font-size-h5 font-weight-boldest">' + repo.initials + '</span></div>') : ('<img src="../..' + repo.image +'" height="40" class="flag-icon circle rounded rounded-circle" style="object-fit: cover; width: 36px; margin-right: 10px;"/>')) + repo.text + '</span>'
            );
            return $container;
        }

        function formatRepoSelection (repo) {
            return repo.text;
        }
