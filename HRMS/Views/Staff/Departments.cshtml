@using HRMS.Models.Staff.Department
@model DepartmentVM
@inject IDDLRepo repo
@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Staff/_Layout.cshtml";

    UserModel user = (UserModel)ViewData["User"];
}

<div class="flex-row-fluid">
    <div class="card" style="box-shadow: none !important;">
        <div class="card-header border-0">
            <h1 class="align-items-start flex-column">
                <span class="text-dark text-lg">@Model.StaffDetails.Firstname @Model.StaffDetails.Lastname</span>
            </h1>
            <div class="card-tools">
                <a onclick="add_department('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">Shto departmentin</a>
            </div>
        </div>
        <div class="card-body">
            <table id="tbl_departments" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Departmenti</th>
                        <th>Lloji stafit</th>
                        <th>Data e fillimit</th>
                        <th>Data e mbarimit</th>
                        <th data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <hr />
    <div class="card" style="box-shadow: none !important;">
        <div class="card-header border-0">
            <h1 class="align-items-start flex-column">
                <span class="text-dark text-lg">@Model.StaffDetails.Firstname @Model.StaffDetails.Lastname</span>
                <span class="text-muted mt-1 font-weight-bold font-size-sm">Ka <b class="text-primary">@Model.SubjectCount</b> lëndë</span>
            </h1>
            <div class="card-tools">
                <a onclick="add_subject('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">Shto dokument</a>
            </div>
        </div>
        <div class="card-body">
            <table id="tbl_subjects" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Lënda</th>
                        <th>Data e fillimit</th>
                        <th>Data e mbarimit</th>
                        <th>Data e insertimit</th>
                        <th data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

    <div class="d-flex justify-content-between border-top">
        <input type="button" onclick="go_back_qualification('@Model.StaffDetails.Ide')" class="btn btn-light-primary font-weight-bolder text-uppercase"/>
        <input type="button" onclick="continue_to_department('@Model.StaffDetails.Ide')" class="btn btn-primary font-weight-bolder text-uppercase"/>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            if (@Model.MethodType == MethodType.POST) {
                $('#tab1').attr({ href: '', style: '' });
                $('#tab2').attr({ href: '', style: '' });
                $('#tab3').attr({ href: '', style: '' });
                $('#tab4').attr({ href: '', style: '' });
            } else {
                $('#tab1').attr({ href: '@Url.Action("Register", "Staff")?ide=@Model.StaffDetails.Ide&method=@Model.MethodType', style: "cursor:pointer" });
                $('#tab2').attr({ href: '@Url.Action("Qualification", "Staff")?ide=@Model.StaffDetails.Ide&method=@Model.MethodType', style: "cursor:pointer" });
                $('#tab3').attr({ href: '@Url.Action("Documents", "Staff")?ide=@Model.StaffDetails.Ide&method=@Model.MethodType', style: "cursor:pointer" });
                $('#tab4').attr({ href: '@Url.Action("Departments", "Staff")?ide=@Model.StaffDetails.Ide&method=@Model.MethodType', style: "cursor:pointer" });
            }

            render_tbl_departments(@Html.Raw(Model.Departments));
            render_tbl_subjects(@Html.Raw(Model.Subjects));
        });

        function go_back_documents(ide) {
            window.location.href = '@Url.Action("Documents", "Staff")?ide=' + ide + '&method=@Model.MethodType';
        }

        function submit_form(ide) {
            window.location.href = '@Url.Action("Index", "Staff")';
        }

        function render_tbl_departments(data) {
            $('#tbl_departments').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { width: 10, targets: [0, 5] },
                    { width: 20, targets: [2, 3, 4] },
                    { width: 30, targets: [1] },
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "department" },
                    { data: "staffType" },
                    {
                        data: function(row, type, set) {
                            var date = new Date(Date.parse(row.startDate));
                            return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var date = new Date(Date.parse(row.endDate));
                            return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="input-group-prepend">' +
                                '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu">' +
                                '<button type="button" class="dropdown-item" onclick="edit_document(\'' + row.staffCollegeIde + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                '<button type="button" class="dropdown-item" onclick="delete_document(\'' + row.staffCollegeIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>'+
                                '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function render_tbl_departments(data) {
            $('#tbl_subjects').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { width: 10, targets: [0, 5] },
                    { width: 20, targets: [2, 3, 4] },
                    { width: 30, targets: [1] },
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "subject" },
                    {
                        data: function(row, type, set) {
                            var date = new Date(Date.parse(row.startDate));
                            return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var date = new Date(Date.parse(row.startDate));
                            return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var date = new Date(Date.parse(row.insertDate));
                            return `${date.getUTCDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="input-group-prepend">' +
                                '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu">' +
                                '<button type="button" class="dropdown-item" onclick="edit_document(\'' + row.staffCollegeSubjectIde + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                '<button type="button" class="dropdown-item" onclick="delete_document(\'' + row.staffCollegeSubjectIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>'+
                                '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function add_department(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_AddDepartment", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function add_subject(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_AddSubject", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function edit_department(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_EditDepartment", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function edit_subject(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_EditSubject", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function delete_department(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteMenu)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteDepartment", "Staff")', { ide: ide }, function (data) {
                        if (data.status == ErrorStatus.SUCCESS) {
                            Swal.fire({
                                icon: 'success',
                                title: data.title,
                                text: data.description,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(t => {
                                window.location.reload()
                            });
                        } else if (data.status == ErrorStatus.WARNING) {
                            Swal.fire({
                                icon: 'warning',
                                title: data.title,
                                text: data.description,
                                confirmButtonText: '@Html.Raw(Resource.Okay)'
                            });
                        }
                    });
                }
            });
        }

        function delete_subject(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteMenu)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteSubject", "Staff")', { ide: ide }, function (data) {
                        if (data.status == ErrorStatus.SUCCESS) {
                            Swal.fire({
                                icon: 'success',
                                title: data.title,
                                text: data.description,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(t => {
                                window.location.reload()
                            });
                        } else if (data.status == ErrorStatus.WARNING) {
                            Swal.fire({
                                icon: 'warning',
                                title: data.title,
                                text: data.description,
                                confirmButtonText: '@Html.Raw(Resource.Okay)'
                            });
                        }
                    });
                }
            });
        }
    </script>
}
