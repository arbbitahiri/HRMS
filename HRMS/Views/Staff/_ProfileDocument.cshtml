@using HRMS.Models.Staff.Document
@model DocumentsVM

<div class="row">
    <div class="col-md-8">
        <h6 class="font-weight-bolder form-group">@Resource.ListOfDocuments</h6>
    </div>
    <div class="col-md-4">
        <div class="justify-content-end">
            <a onclick="add_document('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">@Resource.AddDocument</a>
        </div>
    </div>
</div>

<table id="tbl_profile_document" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th width="5%">#</th>
            <th width="15%">@Resource.Title</th>
            <th width="15%">@Resource.DocumentType</th>
            <th width="15%">@Resource.Download</th>
            <th width="40%">@Resource.Description</th>
            <th width="40%">@Resource.State</th>
            <th width="10%" data-orderable="false">@Resource.Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<script>
    $(document).ready(function() {
        render_document_tbl(@Json.Serialize(Model.Documents));
    });

    function render_document_tbl(data) {
        var rowCount = 1;
        $('#tbl_profile_document').DataTable({
            destroy: true,
            language: {
                url: `/Culture/DataTable/${culture}.json`
            },
            keys: true,
            responsive: true,
            pageLength: 15,
            data: data,
            deferRender: true,
            columnDefs: [
                { className: "w5 vertikal", targets: [0, 5, 6] },
                { className: "w15 vertikal", targets: [1, 2, 3] },
                { className: "w30 vertikal", targets: [4] }
            ],
            order: [[0, "asc"]],
            columns: [
                {
                    data: function (data, type, row, meta) {
                        rowCount++;
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "title" },
                { data: "documentType" },
                {
                    data: function(row, type, set) {
                        return '<a onclick="download_doc(\'' + row.staffDocumentIde + '\', \'' + row.pathExtension + '\')" href="' + row.path + '" download="' + row.title + '" target="_blank" class="btn btn-primary">@Resource.Download</button>'
                    }
                },
                {
                    data: function(row, type, set) {
                        var desc = '///';
                        if (row.description != null) {
                            if (row.description.length > 80) {
                                desc = row.description.substring(0, 79) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.description.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                            } else {
                                desc = row.description ?? "///";
                            }
                        }
                        return desc;
                    }
                },
                {
                    data: function (row, type, set) {
                        return row.active ? '<small class="badge badge-success">@Html.Raw(Resource.Active)</small>' : '<small class="badge badge-danger">@Html.Raw(Resource.Passive)</small>';
                    }
                },
                {
                    data: function (row, type, set) {
                        var dnone = row.active ? "" : "d-none";
                        var dropdown = '<div class="input-group-prepend">' +
                            '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu" role="menu">' +
                            '<button type="button" class="dropdown-item" onclick="edit_document(\'' + row.staffDocumentIde + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                            '<button type="button" class="dropdown-item ' + dnone + '" onclick="delete_document(\'' + row.staffDocumentIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>' +
                            '</div></div>';
                        return dropdown;
                    }
                }
            ]
        });
    }

    function add_document(ide) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_AddDocument", "Staff")?ide=' + ide, function () {
            $('#modal-lg').modal('toggle');
        });
    }

    function edit_document(ide) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_EditDocument", "Staff")?ide=' + ide, function () {
            $('#modal-lg').modal('toggle');
        });
    }

    function delete_document(ide) {
        Swal.fire({
            title: "@Html.Raw(Resource.AreYouSure)",
            text: "@Html.Raw(Resource.SureYouWantToDeleteDocument)",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: "@Resource.Yes",
            cancelButtonText: "@Resource.No"
        }).then((result) => {
            if (result.value) {
                $.post('@Url.Action("DeleteDocument", "Staff")', {
                    ide: ide,
                    "__RequestVerificationToken": $("[name='__RequestVerificationToken']").val()
                    }, function (data) {
                        handle_success(data, SubmitPathType.RELOAD, "");
                });
            }
        });
    }
</script>
