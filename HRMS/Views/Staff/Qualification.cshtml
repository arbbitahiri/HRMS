@using HRMS.Models.Staff
@model QualificationVM
@inject IDDLRepository repo
@{
    ViewData["Title"] = Resource.SecondStepStaffRegistration;
    Layout = "~/Views/Staff/_Layout.cshtml";

    UserModel user = (UserModel)ViewData["User"];
    var qualifications = Model.QualificationCount == 1 ? Resource.QualificationsLower.Substring(0, Resource.QualificationsLower.Length - 1) : (Model.QualificationCount == 0 ? "Nuk ka kualifikime" : Resource.QualificationsLower);
}

<div class="flex-row-fluid">
    <div class="card" style="box-shadow: none !important;">
        <div class="card-header border-0">
            <h1 class="card-title align-items-start flex-column">
                <span class="text-dark text-lg">@Model.StaffDetails.Firstname @Model.StaffDetails.Lastname</span> <br />
                <span class="text-muted mt-1 font-weight-bold font-size-sm">
                    @if (Model.QualificationCount >= 1)
                    {
                        @Resource.Has <b class="text-primary">@Model.QualificationCount </b>
                    }
                    @qualifications
                </span>
            </h1>
            <div class="card-tools">
                <a onclick="add_qualification('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">@Resource.AddQualification</a>
            </div>
        </div>
        <div class="card-body">
            <table id="tbl_qualifications" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Resource.ProfessionType</th>
                        <th>@Resource.EducationLevel</th>
                        <th>@Resource.Title</th>
                        <th>@Resource.FieldOfStudy</th>
                        <th>@Resource.CreditsNumber</th>
                        <th data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div class="d-flex justify-content-between border-top mt-5">
        <input type="button" value="@Resource.Back" onclick="go_back_register('@Model.StaffDetails.Ide')" class="btn btn-outline-primary font-weight-bolder text-uppercase mt-2"/>
        <input type="button" value="@Resource.Continue" onclick="continue_to_documents('@Model.StaffDetails.Ide')" class="btn btn-primary font-weight-bolder text-uppercase mt-2"/>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            if (@((int)Model.MethodType) == MethodType.POST) {
                $('#tab1').attr({ href: '', style: 'cursor: pointer' });
                $('#tab2').attr({ href: '', style: '' });
                $('#tab3').attr({ href: '', style: 'cursor: default' });
                $('#tab4').attr({ href: '', style: 'cursor: default' });

                $('#trigger_document_form').attr({ disabled: true });
                $('#trigger_staff_department').attr({ disabled: true });

                $('#icon_register').attr({ style: 'background-color: #43b25d' });
            } else {
                $('#tab1').attr({ href: '@Url.Action("Register", "Staff")?ide=@Model.StaffDetails.Ide&method=@((int)Model.MethodType)', style: "cursor: pointer" });
                $('#tab2').attr({ href: '@Url.Action("Qualification", "Staff")?ide=@Model.StaffDetails.Ide&method=@((int)Model.MethodType)', style: "cursor: pointer" });
                $('#tab3').attr({ href: '@Url.Action("Documents", "Staff")?ide=@Model.StaffDetails.Ide&method=@((int)Model.MethodType)', style: "cursor: pointer" });
                $('#tab4').attr({ href: '@Url.Action("Departments", "Staff")?ide=@Model.StaffDetails.Ide&method=@((int)Model.MethodType)', style: "cursor: pointer" });

                $('#icon_register').attr({ style: 'background-color: #43b25d' });
            }

            render_tbl_qualifications(@Json.Serialize(Model.Qualifications));
        });

        function go_back_register(ide) {
            window.location.href = '@Url.Action("Register", "Staff")?ide=' + ide + '&method=@((int)Model.MethodType)';
        }

        function continue_to_documents(ide) {
            window.location.href = '@Url.Action("Documents", "Staff")?ide=' + ide + '&method=@((int)Model.MethodType)';
        }

        function render_tbl_qualifications(data) {
            $('#tbl_qualifications').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { width: 10, targets: [0, 5, 6] },
                    { width: 20, targets: [1, 2, 4] },
                    { width: 30, targets: [3] }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "professionType" },
                    { data: "educationLevel" },
                    { data: "title" },
                    {
                        data: function (row, type, set) {
                            return row.fieldOfStudy ?? "///";
                        }
                    },
                    {
                        data: function (row, type, set) {
                            return row.creditNumber != null ? (row.creditType != null ? `${row.creditNumber} ${row.creditType}`: row.creditNumber) : "///";
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="input-group-prepend">' +
                                '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu">' +
                                '<button type="button" class="dropdown-item" onclick="edit_qualification(\'' + row.staffQualificationIde + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                                '<button type="button" class="dropdown-item" onclick="details_qualification(\'' + row.staffQualificationIde + '\')"><span class="mr-1"><i class="fas fa-info-circle"></i></span><span class="p-1">@Resource.Details</span></button>'+
                                '<button type="button" class="dropdown-item" onclick="delete_qualification(\'' + row.staffQualificationIde + '\')"><span class="mr-1"><i class="fas fa-trash"></i></span><span class="p-1">@Resource.Delete</span></button>'+
                                '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function add_qualification(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_AddQualification", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function edit_qualification(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_EditQualification", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function details_qualification(ide) {
            $('#modal-xl').find('.modal-content').load('@Url.Action("_DetailsQualification", "Staff")?ide=' + ide, function () {
                $('#modal-xl').modal('toggle');
            });
        }

        function delete_qualification(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteMenu)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteQualification", "Staff")', {
                        ide: ide,
                        "__RequestVerificationToken": $("[name='__RequestVerificationToken']").val()
                        }, function (data) {
                            handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }
    </script>
}
