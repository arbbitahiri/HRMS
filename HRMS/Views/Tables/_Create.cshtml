@using HRMS.Models.Tables
@model CreateData
@inject IDDLRepository repo
@{
    UserModel user = (UserModel)ViewData["User"];

    var bonusField = (Model.Table == LookUpTable.Profession) || (Model.Table == LookUpTable.Department);
    var descriptionFields = Model.Table == LookUpTable.Holiday;
    var col = (bonusField || (Model.Table == LookUpTable.Document)) ? "col-md-4" : "col-md-6";
}

<div class="modal-header">
    <h5 class="modal-title">@Resource.Add - @Model.Title</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="far fa-times-circle"></i>
    </button>
</div>

<form asp-action="Create" asp-controller="Tables" id="frm_Create" method="post" data-ajax="true" data-ajax-method="post" data-ajax-success="success_create" role="form">
    <div class="card-body">
        @Html.AntiForgeryToken()
        <input asp-for="Table" type="hidden"/>
        <input asp-for="Title" type="hidden"/>

        <div class="row">
            @if (bonusField)
            {
                <div class="@col form-group">
                    <label asp-for="OtherData" class="required">@(Model.Table == LookUpTable.Rate ? Resource.RateNumber : Resource.Code)</label>
                    <input asp-for="OtherData" class="form-control" />
                    <span asp-validation-for="OtherData" class="text-danger"></span>
                </div>
            }
            @if (Model.Table == LookUpTable.Document)
            {
                <div class="@col form-group">
                    <label asp-for="OtherDataId" class="required">@Resource.DocumentTypeFor</label>
                    <select asp-for="OtherDataId" asp-items="await repo.GetDocumentFor(user.Language)" class="form-control select2"></select>
                    <span asp-validation-for="OtherDataId" class="text-danger"></span>
                </div>
            }
            <div class="@col form-group">
                <label asp-for="NameSQ" class="required">@Resource.NameSq</label>
                <input asp-for="NameSQ" class="form-control" />
                <span asp-validation-for="NameSQ" class="text-danger"></span>
            </div>
            <div class="@col form-group">
                <label asp-for="NameEN" class="required">@Resource.NameEn</label>
                <input asp-for="NameEN" class="form-control" />
                <span asp-validation-for="NameEN" class="text-danger"></span>
            </div>
            @if (Model.Table == LookUpTable.Holiday)
            {
                <div class="col-md-6 form-group">
                    <label asp-for="DescriptionSQ">@Resource.DescriptionSQ</label>
                    <input asp-for="DescriptionSQ" class="form-control" />
                    <span asp-validation-for="DescriptionSQ" class="text-danger"></span>
                </div>
                <div class="col-md-6 form-group">
                    <label asp-for="DescriptionEN">@Resource.DescriptionEN</label>
                    <input asp-for="DescriptionEN" class="form-control" />
                    <span asp-validation-for="DescriptionEN" class="text-danger"></span>
                </div>
            }
        </div>
    </div>
    <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-bold btn-pure btn-default" data-dismiss="modal">@Resource.Close</button>
        <button type="submit" class="btn btn-bold btn-pure btn-primary float-right">@Resource.Add</button>
    </div>
</form>

<script>
    $(document).ready(function () {
        var form = $('#frm_Create');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
    });

    $(".select2").select2({
        width: "100%",
        language: {
            noResults: function () {
                return '@Html.Raw(Resource.NoResultsFound)';
            },
        }
    });

    function success_create(data) {
        handle_success(data, SubmitPathType.RELOAD, "");
    }
</script>
