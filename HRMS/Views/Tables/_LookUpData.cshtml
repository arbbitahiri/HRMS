@using HRMS.Models.Tables
@model TableData

<div class="card">
    <div class="card-header">
        <h3 class="card-title pt-2">@Model.Title</h3>
        <div class="card-tools pr-3">
            <a onclick="create('@((int)Model.Table)', '@Model.Title')" class="btn btn-primary">@Resource.Add</a>
        </div>
    </div>

    <div class="card-body animate">
        <table id="tbl_table_data" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@(Model.Table == LookUpTable.Document ? Resource.DocumentTypeFor : Resource.Code)</th>
                    <th>@Resource.NameSq</th>
                    <th>@Resource.NameEn</th>
                    <th>@Resource.DescriptionSQ</th>
                    <th>@Resource.DescriptionEN</th>
                    <th>@Resource.Active</th>
                    <th data-orderable="false">@Resource.Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@Html.AntiForgeryToken()

<script>
    $(document).ready(function() {
        render_tbl(@Html.Raw(Json.Serialize(Model.DataList)));
    });

    function render_tbl(data) {
        var bonus_column = ('@Model.Table' == '@LookUpTable.Profession') || ('@Model.Table' == '@LookUpTable.Document') || ('@Model.Table' == '@LookUpTable.Department') ? true : false;
        var description_columns = '@Model.Table' == '@LookUpTable.Holiday';
        var rowCount = 1;

        $('#tbl_table_data').DataTable({
            destroy: true,
            language: {
                url: `/Culture/DataTable/${culture}.json`
            },
            keys: true,
            responsive: true,
            pageLength: 10,
            data: data,
            columnDefs: [
                { visible: bonus_column, targets: 1 },
                { className: "text-center vertikal", targets: 6 },
                { visible: description_columns, targets: [4, 5] },
                { className: "vertikal", targets: "_all" },
                { defaultContent: "///", targets: "_all" }
            ],
            order: [[0, "asc"]],
            columns: [
                {
                    data: function(data, type, row, meta) {
                        rowCount++;
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: function(row, type, set) {
                        if (row.otherData != null) {
                            return row.otherData;
                        } else {
                            return "///";
                        }
                    }
                },
                { data: "nameSQ" },
                { data: "nameEN" },
                {
                    data: function(row, type, set) {
                        var description = '///';
                        if (row.descriptionSQ != null) {
                            if (row.descriptionSQ.length > 30) {
                                description = row.descriptionSQ.substring(0, 30) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.descriptionSQ.substring(30) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                            } else {
                                description = row.descriptionSQ ?? "///";
                            }
                        }
                        return description;
                    }
                },
                {
                    data: function(row, type, set) {
                        var description = '///';
                        if (row.descriptionEN != null) {
                            if (row.descriptionEN.length > 30) {
                                description = row.descriptionEN.substring(0, 30) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.descriptionEN.substring(30) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                            } else {
                                description = row.descriptionEN ?? "///";
                            }
                        }
                        return description;
                    }
                },
                {
                    data: function(row, type, set) {
                        var isActive = row.active ? "checked" : "";
                        return '<label class="icheck-success d-inline">' +
                               '<input style="cursor: pointer;" type="checkbox" id="' + row.ide + '" ' + isActive + '>' +
                               '<label for="' + row.ide + '" onclick="change_active(\'' + row.ide + '\',\'' + '@((int)Model.Table)' + '\', this)"></label>' +
                               '</label>';
                    }
                },
                {
                    data: function(row, type, set) {
                        return '<div class="input-group-prepend">' +
                            '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu" role="menu">' +
                            '<button type="button" class="dropdown-item" onclick="edit(\'' + row.ide + '\',\'' + '@((int)Model.Table)' + '\',\'' + '@Model.Title' + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                            '</div></div>';
                    }
                }
            ]
        });
    }

    function load_more(e) {
        $(e).parent().find('.load-less-fst').removeClass('d-none');
        $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
        $(e).addClass('d-none');
    }

    function load_less(e) {
        $(e).addClass('d-none');
        $(e).parent().addClass('d-none');
        $(e).parent().parent().find('.load-more').removeClass('d-none');
    }

    function change_active(ide, tbl, e) {
        $.post('@Url.Action("Delete", "Tables")', {
            table: tbl,
            ide: ide,
            active: !$('input[id="' + ide + '"]').is(":checked"),
            "__RequestVerificationToken": $("[name='__RequestVerificationToken']").val()
        }, function(data) {
            handle_success(data, SubmitPathType.NORELOAD, "");
        });
    }

    function edit(ide, tbl, title) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_Edit", "Tables")', {
            table: tbl,
            title: title,
            ide: ide
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);
            sessionStorage.setItem("tbl_title", title);

            $('#modal-lg').modal('toggle');
        });
    }

    function create(tbl, title) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_Create", "Tables")', {
            table: tbl,
            title: title
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);
            sessionStorage.setItem("tbl_title", title);

            $('#modal-lg').modal('toggle');
        });
    }
</script>