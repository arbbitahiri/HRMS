@using HRMS.Models.Tables
@model TableData

<div class="card">
    <div class="card-header">
        <h3 class="card-title">@Model.Title</h3>
        <div class="card-tools">
            <a onclick="create('@Model.Table', '@Model.Title')" class="btn btn-primary">@Resource.Add</a>
        </div>
    </div>

    <div class="card-body animate">
        <table id="tbl_table_data" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@(Model.Table == LookUpTable.ProfessionType ? "Kodi" : "Numri vlerësimit")</th>
                    <th>@Resource.NameSq</th>
                    <th>@Resource.NameEn</th>
                    <th>@Resource.Active</th>
                    <th data-orderable="false">@Resource.Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    $(document).ready(function() {
        render_tbl(@Html.Raw(Model.DataList));
    });

    var bonusColumn = '@Model.Table' == '@LookUpTable.ProfessionType' || '@LookUpTable.RateType' ? true : false;

    function render_tbl(data) {
        $('#tbl_table_data').DataTable({
            destroy: true,
            language: {
                url: `/Culture/DataTable/${culture}.json`
            },
            keys: true,
            responsive: true,
            pageLength: 20,
            data: data,
            columnDefs: [
                { visible: bonusColumn, targets: 1 },
            ],
            order: [[0, "asc"]],
            columns: [{
                {
                    data: function(data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "otherData" },
                { data: "nameSQ" },
                { data: "nameEN" },
                {
                    data: function(row, type, set) {
                        var isActive = row.active ? "checked" : "";
                        return '<label class="icheck-success d-inline">' +
                                '<input style="cursor: pointer;" type="checkbox" id="ch_isActive" ' +
                                'onchange="change_active(this, \'' + row.ide + '\',\'' + @Model.Table + '\')"' + isActive + '>' +
                                '<label for="ch_isActive"></label>'
                                '</label>';
                    }
                },
                {
                    data: function(row, type, set) {
                        var dropdown = '<div class="input-group-prepend">' +
                            '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu" role="menu">' +
                            '<button type="button" class="dropdown-item" onclick="edit(\'' + row.ide + '\',\'' + @Model.Table + '\',\'' + @Model.Title + '\')"><span class="mr-1"><i class="fas fa-pencil-alt"></i></span><span class="p-1">@Resource.Edit</span></button>' +
                            '</div></div>';
                        return dropdown;
                    }
                }
            }]
        });
    }

    function change_active(e, ide, tbl) {
        if($(e).is(":checked")) {
            $(e).removeAttr('checked');
        } else {
            $(e).attr('checked');
        }

        $.post('@Url.Action("Delete", "Tables")', {
            table: tbl,
            ide: ide,
            show: $(e).is(":checked"),
            "__RequestVerificationToken": $("[name='__RequestVerificationToken']").val()
        }, function(data) {
            if (data.status == ErrorStatus.SUCCESS) {
                Swal.fire({
                    icon: 'success',
                    title: data.title,
                    text: data.description,
                    timer: 2000,
                    showConfirmButton: false
                });
            } else if (data.status == ErrorNumber.WARNING) {
                Swal.fire({
                    icon: 'warning',
                    title: data.title,
                    text: data.description,
                    confirmButtonText: '@Html.Raw(Resource.Okay)'
                });
            }
        });
    }

    function edit(ide, tbl, title) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_Edit", "Tables")', {
            table: tbl,
            title: title,
            ide: ide
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);

            $('#modal-lg').modal('toggle');
        });
    }

    function create(tbl, title) {
        $('#modal-lg').find('.modal-content').load('@Url.Action("_Create", "Tables")', {
            table: tbl,
            title: title
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);

            $('#modal-lg').modal('toggle');
        });
    }
</script>