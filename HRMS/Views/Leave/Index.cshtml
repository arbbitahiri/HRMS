@using HRMS.Models.Leave
@model Search
@inject IDDLRepository repo
@{
    ViewData["Title"] = Resource.Leaves;
    UserModel user = (UserModel)ViewData["User"];
    var role = User.Claims.Where(t => t.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role").Select(a => a.Value).FirstOrDefault();
}

<div class="card">
    <div class="card-header">
        <div class="card-title pt-3">
            <h5>@Resource.SearchParameters</h5>
        </div>
        <div class="card-tools pt-2 mr-1">
            <a onclick="add_leave()" class="btn btn-primary">@Resource.AddLeave</a>
        </div>
    </div>
    <div class="card-body">
        <form asp-action="_SearchPending" asp-controller="Leave" id="frm_search_leave" method="post" data-ajax="true" data-ajax-method="POST" data-ajax-update="#kt_pending">
            @Html.AntiForgeryToken()

            <div class="row">
                @if (!User.IsInRole("Lecturer"))
                {
                    <div class="col-md-3 col-lg-3 col-sm-3 form-group">
                        <label asp-for="StaffId">@Resource.Staff</label>
                        <select asp-for="StaffId" class="form-control"></select>
                    </div>
                }
                <div class="col-md-3 col-lg-3 col-sm-3 form-group">
                    <label asp-for="LeaveTypeId">@Resource.LeaveType</label>
                    <select asp-for="LeaveTypeId" asp-items="await repo.LeaveTypes(user.Language)" class="form-control select2">
                        <option value="">@Resource.Choose</option>
                    </select>
                </div>
                <div class="col-md-3 col-lg-3 col-sm-3 form-group">
                    <label asp-for="Date"></label>
                    <div class='input-group' id="kt_date">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                        </div>
                        <input asp-for="Date" type="text" name="Date" class="form-control" hidden readonly />
                        <input type="text" id="kt_search_range" class="form-control" style="cursor: default;" readonly />
                    </div>
                </div>
                <div class="col-md-3 col-lg-3 col-sm-3">
                    <label class="invisible">//</label>
                    <button type="button" id="btn_search" class="btn btn-primary btn-block">@Resource.Search</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card card-primary card-outline card-outline-tabs" style="display: none;" id="kt_leave">
    <div class="card-header p-0 border-bottom-0">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a class="nav-link" role="tab" data-toggle="pill" onclick="pending_tab()"  id="tab_pending"  href="#kt_pending"  data-toggle="tab">@Resource.Pending</a></li>
            <li class="nav-item"><a class="nav-link" role="tab" data-toggle="pill" onclick="approved_tab()" id="tab_approved" href="#kt_approved" data-toggle="tab">@Resource.Approved</a></li>
            <li class="nav-item"><a class="nav-link" role="tab" data-toggle="pill" onclick="rejected_tab()" id="tab_rejected" href="#kt_rejected" data-toggle="tab">@Resource.Rejected</a></li>
        </ul>
    </div>
    <div class="card-body">
        <div class="tab-content">
            <div class="tab-pane" id="kt_pending"></div>
            <div class="tab-pane" id="kt_approved"></div>
            <div class="tab-pane" id="kt_rejected"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            $(".select2").select2({
                width: "100%",
                language: {
                    noResults: function () {
                        return '@Html.Raw(Resource.NoResultsFound)';
                    },
                }
            });

            var start = moment('2020-01-01');
            var end = moment();
            $('#kt_date').daterangepicker({
                locale: {
                    format: "DD/MM/YYYY",
                    seperator: " - ",
                    applyLabel: "@Resource.Continue",
                    cancelLabel: "@Resource.Cancel",
                    fromLabel: "@Resource.From",
                    toLabel: "@Resource.To",
                    timePicker: true,
                    timePicker24Hour: true,
                    timePickerIncrement: 30,
                    customRangeLabel: "@Html.Raw(Resource.OtherDate)",
                    weekLabel: "@Html.Raw(Resource.WeekLetter)",
                    daysOfWeek: [
                        "@Html.Raw(Resource.SundayLetter)",
                        "@Html.Raw(Resource.MondayLetter)",
                        "@Html.Raw(Resource.TuesdayLetter)",
                        "@Html.Raw(Resource.WednesdayLetter)",
                        "@Html.Raw(Resource.ThursdayLetter)",
                        "@Html.Raw(Resource.FridayLetter)",
                        "@Html.Raw(Resource.SaturdayLetter)"
                    ],
                    monthNames: [
                        "@Html.Raw(Resource.January)",
                        "@Html.Raw(Resource.February)",
                        "@Html.Raw(Resource.March)",
                        "@Html.Raw(Resource.April)",
                        "@Html.Raw(Resource.May)",
                        "@Html.Raw(Resource.June)",
                        "@Html.Raw(Resource.July)",
                        "@Html.Raw(Resource.August)",
                        "@Html.Raw(Resource.September)",
                        "@Html.Raw(Resource.October)",
                        "@Html.Raw(Resource.November)",
                        "@Html.Raw(Resource.December)"
                    ],
                    firstDay: 1
                },
                buttonClasses: 'btn',
                applyClass: 'btn-primary',
                cancelClass: 'btn-secondary',
                startDate: start,
                endDate: end,
                ranges: {
                    '@Html.Raw(Resource.Today)': [moment(), moment()],
                    '@Html.Raw(Resource.Yesterday)': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    '@Html.Raw(Resource.Last30Days)': [moment().subtract(29, 'days'), moment()],
                    '@Html.Raw(Resource.ThisMonth)': [moment().startOf('month'), moment().endOf('month')],
                    '@Html.Raw(Resource.LastMonth)': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    '@Html.Raw(Resource.ActualYear)': [moment().startOf('year'), moment()],
                    '@Html.Raw(Resource.LastYear)': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')],
                    '@Html.Raw(Resource.AllTime)': [moment('2020-01-01'), moment()]
                }, function (start, end, label) {
                    $('#kt_date .form-control').val(start.format("DD/MM/YYYY") + ' - ' + end.format('DD/MM/YYYY'))
                    if (label == '@Html.Raw(Resource.OtherDate)') {
                        $('#kt_search_range').val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
                    } else {
                        $('#kt_search_range').val(label);
                    }
                }
            });
            $('#kt_date .form-control').val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
            $('#kt_search_range').val('@Html.Raw(Resource.AllTime)');

            change_staff();

            $('#btn_search').on('click', function() {
                $('#kt_leave').slideDown(500);
                if (sessionStorage.getItem("tab_leave") == null) {
                    $('#tab_pending').click();
                } else {
                    $('#' + sessionStorage.getItem("tab_leave")).click();
                }
            });
            $('#btn_search').click();
        });

        var user_role = '@role';

        function pending_tab() {
            sessionStorage.setItem("tab_leave", "tab_pending");
            $('#frm_search_leave').attr('action', '@Url.Action("_SearchPending")');
            $('#frm_search_leave').attr('data-ajax-update', '#kt_pending');
            $('#frm_search_leave').addClass('noLoading');
            $('#frm_search_leave').submit();
            $('#frm_search_leave').removeClass('noLoading');
        }

        function approved_tab() {
            sessionStorage.setItem("tab_leave", "tab_approved");
            $('#frm_search_leave').attr('action', '@Url.Action("_SearchApproved")');
            $('#frm_search_leave').attr('data-ajax-update', '#kt_approved');
            $('#frm_search_leave').addClass('noLoading');
            $('#frm_search_leave').submit();
            $('#frm_search_leave').removeClass('noLoading');
        }

        function rejected_tab() {
            sessionStorage.setItem("tab_leave", "tab_rejected");
            $('#frm_search_leave').attr('action', '@Url.Action("_SearchRejected")');
            $('#frm_search_leave').attr('data-ajax-update', '#kt_rejected');
            $('#frm_search_leave').addClass('noLoading');
            $('#frm_search_leave').submit();
            $('#frm_search_leave').removeClass('noLoading');
        }

        function change_staff() {
            $('#StaffId').select2({
                width: "100%",
                allowClear: true,
                language: {
                    noResults: function () {
                        return '@Html.Raw(Resource.NoResultsFound)';
                    },
                    searching: function() {
                        return '@Html.Raw(Resource.Searching)';
                    },
                },
                ajax: {
                    url: '@Url.Action("GetStaff")',
                    type: 'post',
                    datatype: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            name: params.term,
                            __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                        };
                    },
                    processResults: function (response) {
                        return {
                            results: response
                        };
                    },
                    catch: true
                },
                placeholder: '@Resource.Choose',
                templateResult: formatRepo,
                templateSelection: formatRepoSelection
            });
        }

        function formatRepo(repo) {
            if (repo.loading) {
                return repo.text;
            }

            var $container = $(
                '<span class="d-flex align-items-center">' + (repo.image == null ? ('<div class="symbol symbol-40 symbol-sm flex-shrink-0 mr-3"><span class="symbol-label font-size-h5 font-weight-boldest">' + repo.initials + '</span></div>') : ('<img src="../..' + repo.image +'" height="40" class="flag-icon circle rounded rounded-circle" style="object-fit: cover; width: 36px; margin-right: 10px;"/>')) + repo.text + '</span>'
            );
            return $container;
        }

        function formatRepoSelection(repo) {
            return repo.text;
        }

        function add_leave() {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_Create", "Leave")', function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function review_leave(ide) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_Review", "Leave")', { ide: ide }, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function edit_leave(ide) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_Edit", "Leave")', { ide: ide }, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function details_leave(ide) {
            $('#modal-lg').find('.modal-content').load('@Url.Action("_Details", "Leave")', { ide: ide }, function () {
                $('#modal-lg').modal('toggle');
            });
        }

        function delete_leave(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteLeave)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("Delete", "Leave")', {
                        ide: ide,
                        "__RequestVerificationToken": $("[name='__RequestVerificationToken']").val()
                        }, function (data) {
                            handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }
    </script>
}
