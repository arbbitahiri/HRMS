@using HRMS.Models.Application
@model LogSearch
@inject IDDLRepository repo
@{
    UserModel user = (UserModel)ViewData["User"];
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">@Resource.SearchParameters/h3>
    </div>
    <div class="card-body">
        <form asp-action="SearchLogs" asp-controller="Application" id="frm_search_logs" method="post" data-ajax="true" data-ajax-method="post" data-ajax-success="success_search">
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-3 form-group">
                    <label asp-for="Role">@Resource.Role</label>
                    <select asp-for="Role" asp-items="await repo.Roles(user.Language)" class="form-control selec2">
                        <option value="">@Resource.Choose</option>
                    </select>
                </div>
                <div class="col-3 form-group">
                    <label asp-for="User">@Resource.User</label>
                    <select asp-for="User" class="form-control" onchange="change_users(this)"></select>
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Date">@Resource.Date</label>
                    <input asp-for="Date" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Ip">@Resource.Ip</label>
                    <input asp-for="Ip" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Controller">@Resource.Controller</label>
                    <input asp-for="Controller" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Action">@Resource.Action</label>
                    <input asp-for="Action" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="HttpMethod">@Resource.HttpMethod</label>
                    <input asp-for="HttpMethod" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Error">@Resource.IsError</label>
                    <input asp-for="Error" type="text" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <label asp-for="Error" style="visibility: hidden;">@Resource.IsError</label>
                    <input type="submit" class="btn btn-primary" value="@Resource.Search"/>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h4 class="card-title mb-0">@Resource.SearchResult</h4>
    </div>
    <div class="card-body">
        <table id="tbl_logs" class="table table-striped table-bordered w-100 table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@Resource.Ip</th>
                    <th>@Resource.Controller</th>
                    <th>@Resource.Action</th>
                    <th>@Resource.Description</th>
                    <th>@Resource.Username</th>
                    <th>@Resource.Exception</th>
                    <th>@Resource.FormContent</th>
                    <th>@Resource.HttpMethod</th>
                    <th>@Resource.InsertDate</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var form = $('#frm_search_logs');
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);

            $(".select2").select2({
                width: "100%",
                language: {
                    noResults: function () {
                        return '@Html.Raw(Resource.NoResultsFound)';
                    },
                }
            });

            form.submit();
        });

        function change_users() {
            $.get('@Url.Action("AspUsers")', {
                name: "",
                role: $("#Role").val()
            }, function (data) {
                $('#User').select2({
                    width: "100%",
                    language: {
                        noResults: function () {
                            return '@Html.Raw(Resource.NoResultsFound)';
                        },
                        searching: function() {
                            return '@Html.Raw(Resource.Searching)';
                        },
                    },
                    ajax: {
                        url: '@Url.Action("AspUsers")',
                        type: 'post',
                        datatype: 'json',
                        data: function (params) {
                            return {
                                name: params.term,
                                role: $("#Role").val()
                            };
                        },
                        processResults: function (response) {
                            return {
                                results: response
                            };
                        },
                        catch: true
                    },
                    templateResult: formatState,
                    templateSelection: formatState
                })
            });
        }

        function formatState(state) {
            if (state.loading) {
                return state.text;
            }

            var $state = $('<span>' + (state.image == null ? ('<div class="symbol symbol-40 symbol-sm flex-shrink-0 mr-3"><span class="symbol-label font-size-h5 font-weight-boldest">' + state.initials + '</span></div>') : ('<img src="../..' + state.image +'" width="40" height="40" class="flag-icon circle rounded rounded-circle" />')) + state.text + '</span>');
            return $state;
        }

        function success_search(data) {
            $('#tbl_logs').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 20,
                data: data,
                columnDefs: [
                    { className: "w5 vertikal", targets: [0, 1, 8] },
                    { className: "w10 vertikal", targets: [2, 3, 9] },
                    { className: "w15 vertikal", targets: [5] },
                    { className: "w20 vertikal", targets: [4, 6, 7] },
                ],
                order: [[ 0, 'asc' ]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "ip" },
                    { "data": "controller" },
                    { "data": "action" },
                    { "data": "description" },
                    { "data": "username" },
                    { "data": "exception" },
                    { "data": "formContent" },
                    { "data": "httpMethod" },
                    { "data": "insertedDate" }
                ]
            });
        }
    </script>
}
