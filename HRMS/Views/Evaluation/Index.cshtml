@{
    ViewData["Title"] = @Resource.Evaluation;
    int i = 1;
}

<div class="card">
    <div class="card-header">
        <div class="card-title">@Resource.ChooseEvaluationType</div>
    </div>
    <div class="card-body">
        <ul class="nav nav-pills nav-success row">
            @foreach(var evaluation in Enum.GetValues(typeof(EvaluationTypeEnum)).Cast<EvaluationTypeEnum>())
            {
                <div data-id="@i" class="nav-item d-flex flex-grow-1 flex-shrink-0 col-md-6 col-12 mb-3" style="cursor: pointer;">
                    <a onclick="redirect_to(@((int)evaluation), this)"
                        class="nav-link slide-fwd-center nav-link py-10 d-flex flex-grow-1 rounded flex-column align-items-center border"
                        data-toggle="pill">
                        <span class="nav-icon py-2 w-auto"><i class="@GetIcon(evaluation) fa-4x"></i></span>
                        <span class="nav-text font-weight-bolder text-center font-size-h7 py-1">@GetText(evaluation)</span>
                    </a>
                </div>
                i++;
            }
        </ul>
    </div>
</div>

@section Scripts {
    <script>
        function redirect_to(et, event) {
            if (EvaluationType.MANAGER == et) {
                window.location.href = '@Url.Action("Index", "Manager", new { area = "Evaluations" })';
            } else if (EvaluationType.STUDENTSTAFF == et) {
                window.location.href = '@Url.Action("Index", "StudentsStaff", new { area = "Evaluations" })';
            } else if (EvaluationType.STUDENTCOLLEGE == et) {
                window.location.href = '@Url.Action("Index", "StudentsCollege", new { area = "Evaluations" })';
            } else {
                window.location.href = '@Url.Action("Index", "Self", new { area = "Evaluations" })';
            }
        }

        $("[data-id='3']").removeClass("mb-3");
        $("[data-id='4']").removeClass("mb-3");
    </script>
}

@functions {
    private string GetIcon(EvaluationTypeEnum et) =>
        et switch
        {
            EvaluationTypeEnum.Manager => "fas fa-user-tie",
            EvaluationTypeEnum.StudentStaff => "fas fa-user-graduate",
            EvaluationTypeEnum.StudentCollege => "fas fa-university",
            EvaluationTypeEnum.Self => "fas fa-portrait",
            _ => ""
        };

    private string GetText(EvaluationTypeEnum et) =>
        et switch
        {
            EvaluationTypeEnum.Manager => Resource.ManagerEvaluation,
            EvaluationTypeEnum.StudentStaff => Resource.StudentsStaffEvaluation,
            EvaluationTypeEnum.StudentCollege => Resource.StudentsCollegeEvaluation,
            EvaluationTypeEnum.Self => Resource.SelfEvaluation,
            _ => ""
        };
}
